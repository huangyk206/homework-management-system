<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scau.huangyk.homeworkmanagementsystem.mapper.UserMapper">

    <!-- 开启二级缓存 -->
    <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>-->

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="scau.huangyk.homeworkmanagementsystem.entity.User">
    <result column="id" property="id" />
    <result column="createTime" property="createTime" />
    <result column="updateTime" property="updateTime" />
        <result column="roleId" property="roleId" />
        <result column="userName" property="userName" />
        <result column="sex" property="sex" />
        <result column="account" property="account" />
        <result column="password" property="password" />
        <result column="clazz" property="clazz" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="status" property="status" />
        <result column="valid" property="valid" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    id,
    createTime,
    updateTime,
        roleId, userName, sex, account, password, clazz, phone, email, status,valid
    </sql>

    <select id="selectByAccount" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user where account=#{account} and valid=1
    </select>

    <select id="selectByAccountAndPassword" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user where account=#{account} and password=#{password} and valid=1
    </select>

    <update id="updateByUserId">
        update user set phone=#{phone},email=#{email},sex=#{sex}
        where id=#{id};
    </update>

    <update id="updatePasswordById">
        update user set password=#{password} where id=#{userId};
    </update>

    <select id="selectUserList" resultType="scau.huangyk.homeworkmanagementsystem.vo.UserVo">
        select a.id,a.account,a.userName,b.name roleName,a.sex,a.phone,a.email,a.createTime,a.status
        from user a inner join sys_role b on a.roleId=b.id
        where a.valid=1
        <if test="roleId!=null">
            and a.roleId=#{roleId}
        </if>
        <if test="status!=null">
            and a.status=#{status}
        </if>
        <if test="account!=null">
            and a.account like concat("%",#{account},"%")
        </if>
        order by a.createTime desc

    </select>

    <select id="selectUserById" resultType="scau.huangyk.homeworkmanagementsystem.vo.UserVo">
        select a.id,a.account,a.userName,b.name roleName,a.sex,a.phone,a.email,a.createTime,a.status
        from user a inner join sys_role b on a.roleId=b.id where a.id=#{userId};
    </select>
</mapper>
